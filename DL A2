DL A2
Tittle: Binary classification using Deep Neural Networks Example: Classify movie reviews into positive" reviews and "negative" reviews, just based on the text content of the reviews. Use IMDB dataset

Aim: 
To implement movie reviews into positive" reviews and "negative" reviews, just based on the text content of the reviews.

Theory:
Binary Classification refers to classifying samples in one of two categories. We will design a neural network to perform two-class classification, or binaryclassification, of reviews, from the IMDB movie reviews dataset, to determine whether the reviews are positive or negative. We will use the Python library, Keras.

THE IMDB DATASET
The IMDB dataset is a set of 50,000 highly polarized reviews from the Internet Movie Database. They are split into 25000 reviews each for training and testing.Each set contains an equal number (50%) of positive and negative reviews.
The IMDB dataset comes packaged with Keras. It consists of reviews and their corresponding labels (0 for negative and 1 for positive review). The reviews are asequence of words. They come preprocessed as a sequence of integers, where eachinteger stands for a specific word in the dictionary.

The IMDB dataset can be loaded directly from Keras and will usually downloadabout 80 MB on your machine.

LOADING THE DATA
Let’s load the prepackaged data from Keras. We will only include 10,000 of the most frequently occurring words.

PREPARING THE DATA
We cannot feed a list of integers into our deep neural network. We will need to convert them into tensors.
To prepare our data, we will One-hot Encode our lists and turn them into vectorsof 0’s and 1’s. This would blow up all of our sequences into 10,000-dimensionalvectors containing 1 at all indices corresponding to integers present in that sequence. This vector will have element 0 at all index, which is not present in theinteger sequence.
Simply put, the 10,000-dimensional vector corresponding to each review will have
 Every index corresponding to a word
 Every index with value 1, is a word that is present in the review and is denotedby its integer counterpart.
 Every index containing 0 is a word not present in the review.
We will vectorize our data manually for maximum clarity. This will result in a tensor of shape
(25000, 10000).

Model Architecturewe will use
1. Two intermediate layers with 16 hidden units each
2. Thirdl ayer that will out put the scalar sentiment prediction
3. Intermediate layers will use the relu activation function. relu or Rectified linear unit function will zero out the negative values.
4. Sigmoid activation for the final layer or output layer. A sigmoid function “squashes” arbitrary values into the [0,1] range.

Compiling the model
In this step, we will choose an optimizer, a loss function, and metrics to observe. We will go forward with
 binary_crossentropy loss function, commonly used for Binary Classification
 rmsprop optimizer and
 accuracy as a measure of performance
We can pass our choices for optimizer, loss function and metrics as strings to the compile function because rmsprop, binary_crossentropy and accuracy come packaged with Keras.

Conclusion
And thus, we have successfully classified reviews on IMDB.
