DL A1
Assignment 1

Title: Linear regression by using Deep Neural network: Implement Boston housing price prediction problem by linear regression using Deep Neural network. Use Boston House price prediction dataset.

Aim: To implement Boston housing price prediction using linear regression

1
import pandas as pd
import numpy as np
from tensorflow import keras
import matplotlib.pyplot as plt
import seaborn as sns

2
data = pd.read_csv("housing.csv")

3
data

4
column_names = ['CRIM', 'ZN', 'INDUS', 'CHAS', 'NOX', 'RM', 'AGE', 'DIS', 'RAD', 'TAX', 'PTRATIO', 'B', 'LSTAT', 'MEDV']
df = pd.read_csv('housing.csv', header=None, delimiter=r'\s+', names=column_names)
df

5
df.describe().T

6
df.isnull().sum()

7
df.isnull().values.any()

8
plt.figure(figsize=(10, 8))
sns.heatmap(df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

9
X = df.drop('MEDV', axis=1)
y = df['MEDV']

10
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.neural_network import MLPRegressor
from sklearn.metrics import mean_squared_error, r2_score

11
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the data using StandardScaler
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

12
model = MLPRegressor(hidden_layer_sizes=(100, 50), activation='relu', random_state=42)
model.fit(X_train_scaled, y_train)

# Predict on the test set
y_pred = model.predict(X_test_scaled)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R2 Score:", r2)

13
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Scale the data using StandardScaler
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

14
from tensorflow import keras
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense

15
model = Sequential()
model.add(Dense(100, activation='relu', input_shape=(X_train_scaled.shape[1],)))
model.add(Dense(50, activation='relu'))
model.add(Dense(1))

# Compile the model
model.compile(loss='mean_squared_error', optimizer='adam')

# Train the model
history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_data=(X_test_scaled, y_test), verbose=0)

16
plt.figure(figsize=(10, 6))
plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title('Training and Validation Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.show()

# Predict on the test set
y_pred = model.predict(X_test_scaled)

# Calculate metrics
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print("Mean Squared Error:", mse)
print("R2 Score:", r2)

17
model.summary()



------------------------------------------------------------------------------------------------------------------------------------------

THEORY

Here, we are going to do implementing a saleable model for predicting the houseprice prediction using some of the regression techniques based of some of featuresin the dataset which is called Boston House Price Prediction.
Housing prices are an important reflection of the economy, and housing price ranges are of great interest for both buyers and sellers. 

Ask a home buyer to describe their dream house, and they probably won’t begin with the height of thebasement ceiling or the proximity to an east- west railroad. But this playground competition’s data-set proves that much more influences price negotiations thanthe number of bedrooms or a white-picket fence.

ABOUT THE DATASET
Housing prices are an important reflection of the economy, and housing price ranges are of great interest for both buyers and sellers. In this project, house priceswill be predicted given explanatory variables that cover many aspects of residential houses. The goal of this project is to create a regression model that is able to accurately estimate the price of the house given the features.

The major aim of in this project is to predict the house prices based on the featuresusing some of the regression techniques and algorithms.

LINEAR REGRESSION
It’s a Supervised Learning algorithm which goal is to predict continuous, numerical values based on given data input. From the geometrical perspective, each data sample is a point. Linear Regression tries to find parameters of the linear function, so the distance between the all the pointsand the line is as small as possible. Algorithm used for parameters update is called Gradient Descent.

As a running example, suppose that we wish to estimate the prices of to develop a model for predicting house prices, we need to get our hands on data consisting of sales, including the sales price, area, and age for each home. 

In the terminology of machine learning, the dataset is called a training dataset or training set, and each row (containing the data corresponding to one sale) is called an example (or data point, instance, sample). The thing we are trying to predict (price) is called a label (or target). The variables (age and area) upon which the predictions houses (in dollars) based on their area (in square feet) and age (in years) are based are called features (or covariates).

DATA COLLECTION
This Dataset consist several features such as Number of Rooms, Crime Rate, and Tax and so on. Let’s know about how to read the dataset into the Jupyter Notebook. You can download the dataset from Kaggle in csv file format.

DATA PREPROCESSING
In this Boston Dataset we need not to clean the data. The dataset already cleanedwhen we download from the Kaggle. For your satisfaction i will show to numberof null or missing values in the dataset. As well as we need to understand shape of the dataset.

EXPLORATORY DATA ANALYSIS
In statistics, exploratory data analysis (EDA) is an approach to analyzing data setsto summarize their main characteristics, often with visual methods. A statistical model can be used or not, but primarily EDA is for seeing what the data can tell us beyond the formal modeling or hypothesis testing task.

Feature Selection: It is the process where you automatically or manually select those features which contribute most to your prediction variable or output in which you are interested in. Havingirrelevantfeaturesinyourdatacandecreasetheaccuracyofthe models and makeyour model learn based on irrelevant features.

Conclusion: 
And thus, we have successfully implemented model using Linear Regression.
